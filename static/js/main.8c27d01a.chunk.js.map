{"version":3,"sources":["assets/gapi.js","assets/grabber.js","components/app.js","serviceWorker.js","index.js"],"names":["gapi","API","data","_this","this","Object","classCallCheck","isAuthorized","onStatusUpdate","user","onUserUpdate","scriptId","_satusUpdate","status","_userUpdate","setAuth","googleAuth","auth2","getAuthInstance","isSignedIn","listen","currentUser","get","load","client","init","then","window","addEventListener","signOut","signIn","url","function","parameters","devMode","request","root","path","concat","method","body","Promise","resolve","reject","execute","response","error","JSON","stringify","details","errorMessage","result","apiKey","clientId","scope","discoveryDocs","Expression","_ref","name","pattern","flags","expression","RegExp","text","match","Builder","buildString","string","regexp","exec","push","values","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","parameter","value","replace","err","return","Grabber","variables","expressions","map","variable","builder","reduce","exp","apply","build","App","props","possibleConstructorReturn","getPrototypeOf","call","state","links","api","authHandler","authorize","setState","runHandler","grab","all","link","fetch","join","changeHandler","event","defineProperty","target","classes","_this$state","react_default","a","createElement","className","AppBar_default","position","appBar","Toolbar_default","Typography_default","variant","color","grow","Button_default","button","onClick","w3","ig","container","Grid_default","spacing","grid","item","xs","TextField_default","label","fullWidth","multiline","rows","onChange","index","length","Component","withStyles","theme","flexGrow","padding","Boolean","location","hostname","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c27d01a.chunk.js","sourcesContent":["const data = {\n  apiKey: 'AIzaSyA0rvMrNVWVhm8HNd56eY64OXhVEVIxqlQ',\n  clientId: '169025190639-ktoqejmqod0hcfh8pbt7hknbg8apfps9.apps.googleusercontent.com',\n  scope: 'https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/script.external_request',\n  discoveryDocs: ['https://script.googleapis.com/$discovery/rest?version=v1']\n};\n\nclass API {\n\n  gapi;\n  googleAuth;\n  isAuthorized = false;\n  onStatusUpdate = null;\n  user = null;\n  onUserUpdate = null;\n  scriptId = 'M1qUJ-bECOgm4Y9z9evwE5gNpR_a-QLCI';\n\n  _satusUpdate = status => {\n    this.isAuthorized = status;\n    if (this.onStatusUpdate)\n      this.onStatusUpdate(status);\n  }\n\n  _userUpdate = user => {\n    this.user = user;\n    if (this.onUserUpdate)\n      this.onUserUpdate(this.user);\n  };\n\n  constructor (data) {\n    let setAuth = () => {\n      this.googleAuth = this.gapi.auth2.getAuthInstance();\n      this.googleAuth.isSignedIn.listen(this._satusUpdate);\n      this.googleAuth.currentUser.listen(this._userUpdate);\n      this._satusUpdate(this.googleAuth.isSignedIn.get());\n      if (this.isAuthorized) {\n        this._userUpdate(this.googleAuth.currentUser.get());\n      }\n    };\n    let load = () => {\n      this.gapi.client\n        .init(data)\n        .then(setAuth);\n    };\n    let init = () => {\n      this.gapi = window.gapi;\n      this.gapi.load('client:auth2', load);\n    };\n    if (window.gapi) {\n      init();\n    } else {\n      window.addEventListener('gapiLoaded', init);\n    }\n  }\n\n  authorize () {\n    if (this.isAuthorized) {\n      return this.googleAuth.signOut();\n    } else {\n      return this.googleAuth.signIn();\n    }\n  }\n\n  fetch (url) {\n    let data = {\n      'function': 'fetch',\n      'parameters': [ url ],\n      'devMode': true\n    };\n    let request = this.gapi.client.request({\n      'root': 'https://script.googleapis.com',\n      'path': `v1/scripts/${this.scriptId}:run`,\n      'method': 'POST',\n      'body': data\n    });\n    return new Promise((resolve, reject) => {\n      request.execute(response => {\n        if (response.error && response.error.status) {\n          reject('Error calling API: ' + JSON.stringify(response, null, 2));\n        } else if (response.error) {\n          let error = response.error.details[0];\n          reject('Script error! Message: ' + error.errorMessage);\n        } else {\n          resolve(response.response.result);\n        }\n      });\n    });\n  }\n\n}\n\nexport default new API(data);","class Expression {\n\n  name;\n  expression;\n\n  constructor ({ name, pattern, flags }) {\n    this.expression = new RegExp(pattern, flags);\n  }\n\n  apply (text) {\n    let matches = text.match(this.expression);\n    return matches[1];\n  }\n\n}\n\nclass Builder {\n\n  string;\n  parameters = [];\n\n  constructor (buildString) {\n    this.string = buildString;\n    let regexp = /%(.+?)%/g;\n    let result;\n    while (result = regexp.exec(buildString)) {\n      let name = result[1];\n      this.parameters.push({ name, regexp: new RegExp(`%${name}%`, 'g') });\n    }\n  }\n\n  build (values) {\n    let result = this.string.split();\n    for (let parameter of this.parameters) {\n      result.replace(parameter.regexp, values[parameter.name]);\n    }\n    return result;\n  }\n\n}\n\nexport default class Grabber {\n\n  static grab (variables, buildString) {\n    let expressions = variables.map(variable => new Expression(variable));\n    let builder = new Builder(buildString);\n    return text => {\n      let values = expressions.reduce((values, exp) => {\n        values[exp.name] = exp.apply(text);\n        return values;\n      }, {});\n      return builder.build(values);\n    };\n  }\n\n}","import React, { Component } from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport api from '../assets/gapi';\nimport Grabber from '../assets/grabber';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    \n  },\n  grow: {\n    flexGrow: 1,\n  },\n  container: {\n    padding: 20\n  },\n  button: {\n\n  }\n});\n\nclass App extends Component {\n\n  state = {\n    links: 'https://reactjs.org',\n    variables: [\n      {\n        name: 'Title',\n        pattern: '<title.*>(.+)<\\\\/title>',\n        flags: 'i'\n      }\n    ],\n    buildString: 'Title: %Title%',\n    result: '',\n    user: api.user,\n  };\n\n  constructor (props) {\n    super(props);\n    api.onUserUpdate = user => this.setState({ user });\n  }\n\n  authHandler = () => {\n    api.authorize()\n      .then(user => this.setState({ user }));\n  }\n\n  runHandler = () => {\n    let grab = Grabber.grab(this.state.variables, this.state.buildString);\n    Promise.all(this.state.links.split('\\n').map(link => api.fetch(link)))\n      .then(result => result.map(text => grab(text)).join('\\n'))\n      .then(result => this.setState({ result }));\n  }\n\n  changeHandler = name => event => {\n    this.setState({ [name]: event.target.value });\n  }\n\n  render() {\n\n    const { classes } = this.props,\n      { links, variables, buildString, user, result } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              Data grabber\n            </Typography>\n            <Button className={classes.button} color=\"inherit\" onClick={this.authHandler} >\n              { user ? user.w3.ig : 'Login' }\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.container}>\n          <Grid container spacing={24} className={classes.grid}>\n            <Grid item xs={4}>\n              <TextField\n                label=\"Links\"\n                fullWidth\n                multiline\n                rows={30}\n                variant=\"outlined\"\n                value={links}\n                onChange={this.changeHandler('links')}\n              />\n            </Grid>\n            <Grid item xs={8}>\n              {variables.map((variable, index) => (\n                <Grid container spacing={24}>\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Name\"\n                      value={variable.name}\n                    />\n                  </Grid>\n                  <Grid item xs={9}>\n                    <TextField\n                      fullWidth\n                      label=\"Pattern\"\n                      value={variable.pattern}\n                    />\n                  </Grid>\n                  <Grid item xs={3}>\n                    <TextField\n                      fullWidth\n                      label=\"Flags\"\n                      value={variable.flags}\n                    />\n                  </Grid>\n                </Grid>\n              ))}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                label=\"Build string\"\n                value={buildString}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button color=\"primary\" className={classes.button} onClick={this.runHandler} >\n                Grab\n              </Button>\n            </Grid>\n            { result.length > 0 &&\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Result\"\n                  fullWidth\n                  multiline\n                  rows={result.split('\\n').length}\n                  variant=\"outlined\"\n                  value={links}\n                />\n              </Grid>\n            }\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}