{"version":3,"sources":["components/textarea.js","assets/gapi.js","assets/parameterData.js","assets/grabber.js","components/app.js","serviceWorker.js","index.js"],"names":["components_textarea","_ref","label","value","onChange","react_default","a","createElement","TextField_default","fullWidth","multiline","variant","API","data","_this","this","Object","classCallCheck","defineProperty","_gapi","writable","_googleAuth","_isAuthorized","_onStatusUpdate","_satusUpdate","status","classPrivateFieldLooseBase","setAuth","auth2","getAuthInstance","isSignedIn","listen","get","load","client","init","then","window","gapi","addEventListener","signOut","signIn","url","function","parameters","devMode","request","root","path","method","body","Promise","resolve","reject","execute","response","error","JSON","stringify","details","errorMessage","result","val","currentUser","apiKey","clientId","scope","discoveryDocs","ParameterData","_ref$name","name","_ref$pattern","pattern","_ref$item","item","_ref$flags","flags","i","g","m","_arr","keys","_i","length","key","Expression","parameter","expression","RegExp","flagsToString","text","replace","match","Grabber","buildString","expressions","map","values","reduce","exp","apply","App","props","possibleConstructorReturn","getPrototypeOf","call","state","links","itemsContainer","user","_userUpdate","setState","api","authHandler","authorize","changeHandler","event","target","runHandler","_this$state","grab","all","split","link","fetch","parameterChangeHandler","id","parameterCheckHandler","parameterDeleteHandler","splice","parameterAddHandler","push","onStatusUpdate","_this2","classes","_this$state2","className","AppBar_default","position","appBar","Toolbar_default","Typography_default","color","grow","Button_default","button","onClick","w3","ig","container","index","row","FormGroup_default","FormControlLabel_default","control","Checkbox_default","checked","disabled","addHandler","element","dangerouslySetInnerHTML","__html","Component","withStyles","flexGrow","padding","marginRight","icon","fontSize","margin","display","alignItems","marginTop","marginBottom","marginLeft","minWidth","Boolean","location","hostname","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sUAGeA,EAAA,SAAAC,GAAsC,IAA1BC,EAA0BD,EAA1BC,MAAOC,EAAmBF,EAAnBE,MAAOC,EAAYH,EAAZG,SACvC,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEJ,MAAOA,EACPO,WAAS,EACTC,WAAS,EACTC,QAAQ,WACRR,MAAOA,EACPC,SAAUA,qBCJVQ,aAaJ,SAAAA,EAAaC,GAAM,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAH,GAAAI,OAAAE,eAAAH,KAAAI,EAAA,CAAAC,UAAA,EAAAjB,WAAA,IAAAa,OAAAE,eAAAH,KAAAM,EAAA,CAAAD,UAAA,EAAAjB,WAAA,IAAAa,OAAAE,eAAAH,KAAAO,EAAA,CAAAF,UAAA,EAAAjB,OATH,IASGa,OAAAE,eAAAH,KAAAQ,EAAA,CAAAH,UAAA,EAAAjB,MARD,OAQCa,OAAAE,eAAAH,KAAAS,EAAA,CAAAJ,UAAA,EAAAjB,MANJ,SAAAsB,GACbT,OAAAU,EAAA,EAAAV,CAAAF,EAAIQ,GAAJA,GAAqBG,EACrBT,OAAAU,EAAA,EAAAV,CAAIF,EAAJS,OACEP,OAAAU,EAAA,EAAAV,CAAAF,EAAIS,GAAJA,GAAqBE,MAIvB,IAAIE,EAAU,WACZX,OAAAU,EAAA,EAAAV,CAAAF,EAAIO,GAAJA,GAAmBL,OAAAU,EAAA,EAAAV,CAAAF,EAAIK,GAAJA,GAAWS,MAAMC,kBACpCb,OAAAU,EAAA,EAAAV,CAAAF,EAAIO,GAAJA,GAAiBS,WAAWC,OAA5Bf,OAAAU,EAAA,EAAAV,CAAmCF,EAAnCU,OACAR,OAAAU,EAAA,EAAAV,CAAAF,EAAIU,GAAJA,GAAkBR,OAAAU,EAAA,EAAAV,CAAAF,EAAIO,GAAJA,GAAiBS,WAAWE,QAE5CC,EAAO,WACTjB,OAAAU,EAAA,EAAAV,CAAAF,EAAIK,GAAJA,GAAWe,OACRC,KAAKtB,GACLuB,KAAKT,IAENQ,EAAO,WACTnB,OAAAU,EAAA,EAAAV,CAAAF,EAAIK,GAAJA,GAAakB,OAAOC,KACpBtB,OAAAU,EAAA,EAAAV,CAAAF,EAAIK,GAAJA,GAAWc,KAAK,eAAgBA,IAE9BI,OAAOC,KACTH,IAEAE,OAAOE,iBAAiB,aAAcJ,2DAKxC,OAAAnB,OAAAU,EAAA,EAAAV,CAAID,KAAJO,MACSN,OAAAU,EAAA,EAAAV,CAAAD,KAAAM,MAAiBmB,UAEnBxB,OAAAU,EAAA,EAAAV,CAAAD,KAAAM,MAAiBoB,uCAGnBC,GACL,IAAI7B,EAAO,CACT8B,SAAY,QACZC,WAAc,CAAEF,GAChBG,SAAW,GAETC,EAAU9B,OAAAU,EAAA,EAAAV,CAAAD,KAAAI,MAAWe,OAAOY,QAAQ,CACtCC,KAAQ,gCACRC,KAAQ,mDACRC,OAAU,OACVC,KAAQrC,IAEV,OAAO,IAAIsC,QAAQ,SAACC,EAASC,GAC3BP,EAAQQ,QAAQ,SAAAC,GACd,GAAIA,EAASC,OAASD,EAASC,MAAM/B,OACnC4B,EAAO,sBAAwBI,KAAKC,UAAUH,EAAU,KAAM,SACzD,GAAIA,EAASC,MAAO,CACzB,IAAIA,EAAQD,EAASC,MAAMG,QAAQ,GACnCN,EAAO,0BAA4BG,EAAMI,mBAEzCR,EAAQG,EAASA,SAASM,iDAMdC,GAClB9C,OAAAU,EAAA,EAAAV,CAAAD,KAAAQ,MAAuBuC,+BAIvB,OAAO9C,OAAAU,EAAA,EAAAV,CAAAD,KAAAM,MAAiB0C,YAAY/B,4JAKzBM,EAAA,IAAI1B,EArFN,CACXoD,OAAQ,0CACRC,SAAU,2EACVC,MAAO,yGACPC,cAAe,CAAC,8DCJGC,aAWnB,SAAAA,EAAAnE,GAAwG,IAAAoE,EAAApE,EAAzFqE,YAAyF,IAAAD,EAAlF,YAAkFA,EAAAE,EAAAtE,EAArEuE,eAAqE,IAAAD,EAA3D,GAA2DA,EAAAE,EAAAxE,EAAvDyE,YAAuD,IAAAD,EAAhD,GAAgDA,EAAAE,EAAA1E,EAA5C2E,aAA4C,IAAAD,EAApC,CAAEE,GAAG,EAAMC,GAAG,EAAOC,GAAG,GAAYJ,EAAA3D,OAAAC,EAAA,EAAAD,CAAAD,KAAAqD,GAAArD,KATxGuD,KAAO,YASiGvD,KARxGyD,QAAU,GAQ8FzD,KAPxG2D,KAAO,GAOiG3D,KANxG6D,MAAQ,CACNC,GAAG,EACHC,GAAG,EACHC,GAAG,GAIHhE,KAAKuD,KAAOA,EACZvD,KAAKyD,QAAUA,EACfzD,KAAK2D,KAAOA,EACZ3D,KAAK6D,MAAQA,8DAKb,IADA,IAAIf,EAAS,GADEmB,EAEChE,OAAOiE,KAAKlE,KAAK6D,OAAjCM,EAAA,EAAAA,EAAAF,EAAAG,OAAAD,IAAyC,CAApC,IAAIE,EAAGJ,EAAAE,GACNnE,KAAK6D,MAAMQ,KACbvB,GAAUuB,GAEd,OAAOvB,WCxBLwB,aAMJ,SAAAA,EAAaC,GAAYtE,OAAAC,EAAA,EAAAD,CAAAD,KAAAsE,GACvBtE,KAAKuD,KAAOgB,EAAUhB,KACtBvD,KAAK2D,KAAOY,EAAUZ,KACtB3D,KAAKwE,WAAa,IAAIC,OAAOF,EAAUd,QAASc,EAAUG,mEAGrDC,GAAM,IAAA5E,EAAAC,KACP8C,EAAS,GAIb,OAHA6B,EAAKC,QAAQ5E,KAAKwE,WAAY,SAAAK,GAC5B/B,GAAU+B,EAAMD,QAAQ7E,EAAKyE,WAAYzE,EAAK4D,QAEzCb,WAKUgC,oGAENjD,EAAYkD,GACvB,IAAIC,EAAcnD,EAAWoD,IAAI,SAAAV,GAAS,OAAI,IAAID,EAAWC,KAC7D,OAAO,SAAAI,GACL,IAAIO,EAASF,EAAYG,OAAO,SAACD,EAAQE,GAEvC,OADAF,EAAOE,EAAI7B,MAAQ6B,EAAIC,MAAMV,GACtBO,GACN,IACH,OAAOH,EAAYH,QAAQ,WAAY,SAACC,EAAOtB,GAAR,OAAiB2B,EAAO3B,eCoB/D+B,cA4BJ,SAAAA,EAAaC,GAAO,IAAAxF,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAsF,IAClBvF,EAAAE,OAAAuF,EAAA,EAAAvF,CAAAD,KAAAC,OAAAwF,EAAA,EAAAxF,CAAAqF,GAAAI,KAAA1F,KAAMuF,KA3BRI,MAAQ,CACNC,MAAO,mDACP/D,WAAY,CACV,IAAIwB,EAAc,CAChBE,KAAM,QACNE,QAAS,2BACTE,KAAM,OAER,IAAIN,EAAc,CAChBE,KAAM,QACNE,QAAS,4CACTE,KAAM,kBACNE,MAAO,CAAEC,GAAG,EAAMC,GAAG,EAAMC,GAAG,MAGlC6B,eAAgB,qCAChB/C,OAAQ,GACRgD,KAAM,MASY/F,EANpBgG,YAAc,SAAArF,GACZX,EAAKiG,SAAS,CACZF,KAAMpF,EAASuF,EAAIH,KAAO,QAIV/F,EAKpBmG,YAAc,WACZD,EAAIE,aANcpG,EASpBqG,cAAgB,SAAA7C,GAAI,OAAI,SAAA8C,GACtBtG,EAAKiG,SAAL/F,OAAAE,EAAA,EAAAF,CAAA,GAAiBsD,EAAO8C,EAAMC,OAAOlH,UAVnBW,EAapBwG,WAAa,WAAM,IAAAC,EAC6BzG,EAAK4F,MAA3C9D,EADS2E,EACT3E,WAAYgE,EADHW,EACGX,eAAgBD,EADnBY,EACmBZ,MAChCa,EAAO3B,EAAQ2B,KAAK5E,EAAYgE,GACpCzD,QAAQsE,IAAId,EAAMe,MAAM,MAAM1B,IAAI,SAAA2B,GAAI,OAAIX,EAAIY,MAAMD,MACjDvF,KAAK,SAAAyB,GAAM,OAAIA,EAAOmC,IAAI,SAAAN,GAAI,OAAI8B,EAAK9B,OACvCtD,KAAK,SAAAyB,GAAM,OAAI/C,EAAKiG,SAAS,CAAElD,cAlBhB/C,EAqBpB+G,uBAAyB,SAACC,EAAIxD,GAAL,OAAc,SAAC8C,EAAOjH,GAC7CW,EAAKiG,SAAS,SAAAL,GAEZ,OADAA,EAAM9D,WAAWkF,GAAIxD,GAAQnE,EACtBuG,MAxBS5F,EA4BpBiH,sBAAwB,SAACD,EAAI1C,GAAL,OAAa,SAACgC,EAAOjH,GAC3CW,EAAKiG,SAAS,SAAAL,GAEZ,OADAA,EAAM9D,WAAWkF,GAAIlD,MAAMQ,GAAOjF,EAC3BuG,MA/BS5F,EAmCpBkH,uBAAyB,SAACF,GAAD,OAAQ,WAC/BhH,EAAKiG,SAAS,SAAAL,GAEZ,OADAA,EAAM9D,WAAWqF,OAAOH,EAAI,GACrBpB,MAtCS5F,EA0CpBoH,oBAAsB,WACpBpH,EAAKiG,SAAS,SAAAL,GAEZ,OADAA,EAAM9D,WAAWuF,KAAK,IAAI/D,EAAc,KACjCsC,KA3CTM,EAAIoB,eAAiBtH,EAAKgG,YAFRhG,wEAiDX,IAAAuH,EAAAtH,KAECuH,EAAYvH,KAAKuF,MAAjBgC,QAAFC,EACkDxH,KAAK2F,MAAzDC,EADE4B,EACF5B,MAAO/D,EADL2F,EACK3F,WAAYgE,EADjB2B,EACiB3B,eAAgBC,EADjC0B,EACiC1B,KAAMhD,EADvC0E,EACuC1E,OAE7C,OACExD,EAAAC,EAAAC,cAAA,OAAKiI,UAAWF,EAAQvF,MACtB1C,EAAAC,EAAAC,cAACkI,EAAAnI,EAAD,CAAQoI,SAAS,SAASF,UAAWF,EAAQK,QAC3CtI,EAAAC,EAAAC,cAACqI,EAAAtI,EAAD,KACED,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAAYK,QAAQ,KAAKmI,MAAM,UAAUN,UAAWF,EAAQS,MAA5D,gBAGA1I,EAAAC,EAAAC,cAACyI,EAAA1I,EAAD,CAAQkI,UAAWF,EAAQW,OAAQH,MAAM,UAAUI,QAASnI,KAAKkG,aAC7DJ,EAAOA,EAAKsC,GAAGC,GAAK,WAI5B/I,EAAAC,EAAAC,cAAA,OAAKiI,UAAWF,EAAQe,WACtBhJ,EAAAC,EAAAC,cAACP,EAAD,CACEE,MAAM,QACNC,MAAOwG,EACPvG,SAAUW,KAAKoG,cAAc,YAGhCvE,EAAWoD,IAAI,SAACV,EAAWgE,GAAZ,OACdjJ,EAAAC,EAAAC,cAAA,OAAKiI,UAAWF,EAAQe,WACtBhJ,EAAAC,EAAAC,cAAA,OAAKiI,UAAWF,EAAQiB,KACtBlJ,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,WAAS,EACTP,MAAM,OACNS,QAAQ,WACRR,MAAOmF,EAAUhB,KACjBlE,SAAUiI,EAAKR,uBAAuByB,EAAO,UAE/CjJ,EAAAC,EAAAC,cAACiJ,EAAAlJ,EAAD,CAAWiJ,KAAG,EAACf,UAAWF,EAAQ1D,OAC/B5D,OAAOiE,KAAKK,EAAUV,OAAOoB,IAAI,SAAAZ,GAAG,OACnC/E,EAAAC,EAAAC,cAACkJ,EAAAnJ,EAAD,CAAkBoJ,QAChBrJ,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAD,CACEH,MAAOiF,EACPwE,QAAStE,EAAUV,MAAMQ,GACzBhF,SAAUiI,EAAKN,sBAAsBuB,EAAOlE,KAC9ClF,MAAOkF,OAGb/E,EAAAC,EAAAC,cAACyI,EAAA1I,EAAD,CAAQK,QAAQ,WAAWmI,MAAM,YAAYI,QAASb,EAAKL,uBAAuBsB,IAAlF,WAIFjJ,EAAAC,EAAAC,cAAA,OAAKiI,UAAWF,EAAQiB,KACtBlJ,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,WAAS,EACTE,QAAQ,WACRT,MAAM,UACNC,MAAOmF,EAAUd,QACjBpE,SAAUiI,EAAKR,uBAAuByB,EAAO,cAGjDjJ,EAAAC,EAAAC,cAAA,OAAKiI,UAAWF,EAAQiB,KACtBlJ,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,WAAS,EACTE,QAAQ,WACRT,MAAM,OACNC,MAAOmF,EAAUZ,KACjBtE,SAAUiI,EAAKR,uBAAuByB,EAAO,cAKrDjJ,EAAAC,EAAAC,cAAA,OAAKiI,UAAWF,EAAQe,WACtBhJ,EAAAC,EAAAC,cAACyI,EAAA1I,EAAD,CAAQK,QAAQ,WAAWmI,MAAM,UAAUN,UAAWF,EAAQW,OAAQC,QAASnI,KAAKuG,WAAYuC,UAAWhD,GAA3G,OAGAxG,EAAAC,EAAAC,cAACyI,EAAA1I,EAAD,CAAQK,QAAQ,WAAW6H,UAAWF,EAAQW,OAAQC,QAASnI,KAAK+I,WAAYD,UAAWhD,GAA3F,QAIFxG,EAAAC,EAAAC,cAAA,OAAKiI,UAAWF,EAAQe,WACtBhJ,EAAAC,EAAAC,cAACP,EAAD,CACEE,MAAM,kBACNC,MAAOyG,EACPxG,SAAUW,KAAKoG,cAAc,qBAGhCtD,EAAOsB,OAAS,GACftB,EAAOmC,IAAI,SAAA+D,GAAO,OAChB1J,EAAAC,EAAAC,cAAA,OAAKiI,UAAWF,EAAQe,UAAWW,wBAAyB,CAACC,OAAQF,eAlK/DG,aA2KHC,uBA3MA,CACbpH,KAAM,CACJqH,SAAU,GAEZzB,OAAQ,GAGRI,KAAM,CACJqB,SAAU,GAEZf,UAAW,CACTgB,QAAS,IAEXpB,OAAQ,CACNqB,YAAa,IAEfC,KAAM,CACJC,SAAU,GACVC,OAAQ,GAEVlB,IAAK,CACHmB,QAAS,OACTC,WAAY,SACZC,UAAW,GACXC,aAAc,IAEhBjG,MAAO,CACLkG,WAAY,GACZC,SAAU,MA+KCZ,CAAmB9D,GClNd2E,QACW,cAA7B3I,OAAO4I,SAASC,UAEe,UAA7B7I,OAAO4I,SAASC,UAEhB7I,OAAO4I,SAASC,SAAStF,MACvB,2DCbNuF,IAASC,OAAO/K,EAAAC,EAAAC,cAAC8K,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtJ,KAAK,SAAAuJ,GACjCA,EAAaC","file":"static/js/main.6c89ccaa.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function ({ label, value, onChange }) {\n  return (\n    <TextField\n      label={label}\n      fullWidth\n      multiline\n      variant=\"outlined\"\n      value={value}\n      onChange={onChange}\n    />\n  );\n}","const data = {\n  apiKey: 'AIzaSyA0rvMrNVWVhm8HNd56eY64OXhVEVIxqlQ',\n  clientId: '169025190639-ktoqejmqod0hcfh8pbt7hknbg8apfps9.apps.googleusercontent.com',\n  scope: 'https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/script.external_request',\n  discoveryDocs: ['https://script.googleapis.com/$discovery/rest?version=v1']\n};\n\nclass API {\n\n  #gapi;\n  #googleAuth;\n  #isAuthorized = false;\n  #onStatusUpdate = null;\n\n  #satusUpdate = status => {\n    this.#isAuthorized = status;\n    if (this.#onStatusUpdate)\n      this.#onStatusUpdate(status);\n  }\n\n  constructor (data) {\n    let setAuth = () => {\n      this.#googleAuth = this.#gapi.auth2.getAuthInstance();\n      this.#googleAuth.isSignedIn.listen(this.#satusUpdate);\n      this.#satusUpdate(this.#googleAuth.isSignedIn.get());\n    };\n    let load = () => {\n      this.#gapi.client\n        .init(data)\n        .then(setAuth);\n    };\n    let init = () => {\n      this.#gapi = window.gapi;\n      this.#gapi.load('client:auth2', load);\n    };\n    if (window.gapi) {\n      init();\n    } else {\n      window.addEventListener('gapiLoaded', init);\n    }\n  }\n\n  authorize () {\n    if (this.#isAuthorized) {\n      return this.#googleAuth.signOut();\n    }\n    return this.#googleAuth.signIn();\n  }\n\n  fetch (url) {\n    let data = {\n      'function': 'fetch',\n      'parameters': [ url ],\n      'devMode': true\n    };\n    let request = this.#gapi.client.request({\n      'root': 'https://script.googleapis.com',\n      'path': 'v1/scripts/M1qUJ-bECOgm4Y9z9evwE5gNpR_a-QLCI:run',\n      'method': 'POST',\n      'body': data\n    });\n    return new Promise((resolve, reject) => {\n      request.execute(response => {\n        if (response.error && response.error.status) {\n          reject('Error calling API: ' + JSON.stringify(response, null, 2));\n        } else if (response.error) {\n          let error = response.error.details[0];\n          reject('Script error! Message: ' + error.errorMessage);\n        } else {\n          resolve(response.response.result);\n        }\n      });\n    });\n  }\n\n  set onStatusUpdate (val) {\n    this.#onStatusUpdate = val;\n  }\n\n  get user () {\n    return this.#googleAuth.currentUser.get();\n  }\n\n}\n\nexport default new API(data);","export default class ParameterData {\n\n  name = 'Parameter';\n  pattern = '';\n  item = '';\n  flags = {\n    i: true,\n    g: false,\n    m: false,\n  };\n\n  constructor ({ name = 'Parameter', pattern = '', item = '', flags = { i: true, g: false, m: false, } }) {\n    this.name = name;\n    this.pattern = pattern;\n    this.item = item;\n    this.flags = flags;\n  }\n\n  flagsToString () {\n    let result = '';\n    for (let key of Object.keys(this.flags)) {\n      if (this.flags[key])\n        result += key;\n    }\n    return result;\n  }\n\n}","class Expression {\n\n  name;\n  expression;\n  item;\n\n  constructor (parameter) {\n    this.name = parameter.name;\n    this.item = parameter.item;\n    this.expression = new RegExp(parameter.pattern, parameter.flagsToString());\n  }\n\n  apply (text) {\n    let result = '';\n    text.replace(this.expression, match => {\n      result += match.replace(this.expression, this.item);\n    });\n    return result;\n  }\n\n}\n\nexport default class Grabber {\n\n  static grab (parameters, buildString) {\n    let expressions = parameters.map(parameter => new Expression(parameter));\n    return text => {\n      let values = expressions.reduce((values, exp) => {\n        values[exp.name] = exp.apply(text);\n        return values;\n      }, {});\n      return buildString.replace(/%(.+?)%/g, (match, name) => values[name]);\n    };\n  }\n\n}","import React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Textarea from './textarea';\n\nimport api from '../assets/gapi';\nimport ParameterData from '../assets/parameterData';\nimport Grabber from '../assets/grabber';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    \n  },\n  grow: {\n    flexGrow: 1,\n  },\n  container: {\n    padding: 20\n  },\n  button: {\n    marginRight: 20,\n  },\n  icon: {\n    fontSize: 26,\n    margin: 5\n  },\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  flags: {\n    marginLeft: 30,\n    minWidth: 180\n  }\n};\n\nclass App extends Component {\n\n  state = {\n    links: 'https://reactjs.org\\nhttps://learn.javascript.ru',\n    parameters: [\n      new ParameterData({\n        name: 'Title',\n        pattern: '<title.*?>(.+)<\\\\/title>',\n        item: '$1',\n      }),\n      new ParameterData({\n        name: 'Links',\n        pattern: '<a.+?href=\"(http.+?)\".*?>([^<>].+?)<\\\\/a>',\n        item: '<li>$2: $1</li>',\n        flags: { i: true, g: true, m: false }\n      })\n    ],\n    itemsContainer: '<b>%Title%</b><br><ul>%Links%</ul>',\n    result: [],\n    user: null,\n  };\n\n  _userUpdate = status => {\n    this.setState({\n      user: status ? api.user : null\n    });\n  }\n\n  constructor (props) {\n    super(props);\n    api.onStatusUpdate = this._userUpdate;\n  }\n\n  authHandler = () => {\n    api.authorize();\n  }\n\n  changeHandler = name => event => {\n    this.setState({ [name]: event.target.value });\n  }\n\n  runHandler = () => {\n    const { parameters, itemsContainer, links } = this.state;\n    let grab = Grabber.grab(parameters, itemsContainer);\n    Promise.all(links.split('\\n').map(link => api.fetch(link)))\n      .then(result => result.map(text => grab(text)))\n      .then(result => this.setState({ result }));\n  }\n\n  parameterChangeHandler = (id, name) => (event, value) => {\n    this.setState(state => {\n      state.parameters[id][name] = value;\n      return state;\n    });\n  }\n\n  parameterCheckHandler = (id, key) => (event, value) => {\n    this.setState(state => {\n      state.parameters[id].flags[key] = value;\n      return state;\n    });\n  }\n\n  parameterDeleteHandler = (id) => () => {\n    this.setState(state => {\n      state.parameters.splice(id, 1);\n      return state;\n    });\n  }\n\n  parameterAddHandler = () => {\n    this.setState(state => {\n      state.parameters.push(new ParameterData({}));\n      return state;\n    });\n  }\n\n  render() {\n\n    const { classes } = this.props,\n      { links, parameters, itemsContainer, user, result } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              Data grabber\n            </Typography>\n            <Button className={classes.button} color=\"inherit\" onClick={this.authHandler} >\n              { user ? user.w3.ig : 'Login' }\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.container}>\n          <Textarea\n            label=\"Links\"\n            value={links}\n            onChange={this.changeHandler('links')}\n          />\n        </div>\n        {parameters.map((parameter, index) => (\n          <div className={classes.container}>\n            <div className={classes.row}>\n              <TextField\n                fullWidth\n                label=\"Name\"\n                variant=\"outlined\"\n                value={parameter.name}\n                onChange={this.parameterChangeHandler(index, 'name')}\n              />\n              <FormGroup row className={classes.flags}>\n                {Object.keys(parameter.flags).map(key => (\n                  <FormControlLabel control={\n                    <Checkbox\n                      value={key}\n                      checked={parameter.flags[key]}\n                      onChange={this.parameterCheckHandler(index, key)} />\n                  } label={key} />\n                ))}\n              </FormGroup>\n              <Button variant=\"outlined\" color=\"secondary\" onClick={this.parameterDeleteHandler(index)}>\n                Remove\n              </Button>\n            </div>\n            <div className={classes.row}>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                label=\"Pattern\"\n                value={parameter.pattern}\n                onChange={this.parameterChangeHandler(index, 'pattern')}\n              />\n            </div>\n            <div className={classes.row}>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                label=\"Item\"\n                value={parameter.item}\n                onChange={this.parameterChangeHandler(index, 'item')}\n              />\n            </div>\n          </div>\n        ))}\n        <div className={classes.container}>\n          <Button variant=\"outlined\" color=\"primary\" className={classes.button} onClick={this.runHandler} disabled={!user}>\n            Run\n          </Button>\n          <Button variant=\"outlined\" className={classes.button} onClick={this.addHandler} disabled={!user}>\n            Add\n          </Button>\n        </div>\n        <div className={classes.container}>\n          <Textarea\n            label=\"Items container\"\n            value={itemsContainer}\n            onChange={this.changeHandler('itemsContainer')}\n          />\n        </div>\n        {result.length > 0 &&\n          result.map(element =>\n            <div className={classes.container} dangerouslySetInnerHTML={{__html: element}}></div>\n          )\n        }\n      </div>\n    );\n  }\n\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}