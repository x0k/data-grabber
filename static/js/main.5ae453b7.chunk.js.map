{"version":3,"sources":["components/textarea.js","components/flags.js","components/parameter.js","assets/keys.js","assets/api.js","assets/parameterData.js","assets/grabber.js","components/app.js","serviceWorker.js","index.js"],"names":["components_textarea","_ref","label","value","onChange","react_default","a","createElement","TextField_default","fullWidth","multiline","variant","components_flags","className","onCheck","FormGroup_default","row","Object","keys","map","key","FormControlLabel_default","control","Checkbox_default","checked","withStyles","display","alignItems","marginTop","marginBottom","flags","marginLeft","minWidth","classes","onRemove","name","pattern","item","Button_default","color","onClick","data","apiKey","clientId","scope","discoveryDocs","API","onStatusUpdate","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","url","function","parameters","devMode","get","prototype","root","path","method","body","getRequest","GAPI","ParameterData","_ref$name","_ref$pattern","_ref$item","_ref$flags","i","g","m","result","_arr","_i","length","Expression","parameter","expression","RegExp","flagsToString","text","_this","replace","match","Grabber","buildString","expressions","values","reduce","exp","apply","App","props","state","links","itemsContainer","user","api","authHandler","authorize","changeHandler","event","setState","defineProperty","target","runHandler","_this$state","grab","Promise","all","split","link","fetch","then","parameterChangeHandler","id","parameterCheckHandler","_ref2","parameterDeleteHandler","_ref3","splice","parameterAddHandler","_ref4","push","status","_this2","_this$state2","AppBar_default","position","appBar","Toolbar_default","Typography_default","grow","button","w3","ig","Grid_default","container","xs","lg","wrapper","index","components_parameter","disabled","element","dangerouslySetInnerHTML","__html","Component","flexGrow","width","margin","padding","marginRight","icon","fontSize","Boolean","window","location","hostname","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5ae453b7.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function ({ label, value, onChange }) {\n  return (\n    <TextField\n      label={label}\n      fullWidth\n      multiline\n      variant=\"outlined\"\n      value={value}\n      onChange={onChange}\n    />\n  );\n}","import React from 'react';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport default function ({ className, value, onCheck }) {\n  return (\n    <FormGroup row className={className}>\n      {Object.keys(value).map(key => (\n        <FormControlLabel\n          key={key}\n          label={key}\n          control={\n            <Checkbox\n              value={key}\n              checked={value[key]}\n              onChange={onCheck(key)} />\n          } />\n      ))}\n    </FormGroup>\n  );\n}","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport Flags from './flags';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  flags: {\n    marginLeft: 30,\n    minWidth: 180\n  }\n};\n\nexport default withStyles(styles)(function ({ className, classes, value, onChange, onCheck, onRemove }) {\n  const { name, flags, pattern, item } = value;\n  return (\n    <div className={className}>\n      <div className={classes.row}>\n        <TextField\n          fullWidth\n          label=\"Name\"\n          variant=\"outlined\"\n          value={name}\n          onChange={onChange('name')}\n        />\n        <Flags\n          className={classes.flags}\n          value={flags}\n          onCheck={onCheck}\n        />\n        <Button variant=\"outlined\" color=\"secondary\" onClick={onRemove}>\n          Remove\n        </Button>\n      </div>\n      <div className={classes.row}>\n        <TextField\n          fullWidth\n          variant=\"outlined\"\n          label=\"Pattern\"\n          value={pattern}\n          onChange={onChange('pattern')}\n        />\n      </div>\n      <div className={classes.row}>\n        <TextField\n          fullWidth\n          variant=\"outlined\"\n          label=\"Item\"\n          value={item}\n          onChange={onChange('item')}\n        />\n      </div>\n    </div>\n  );\n});","export const data = {\n  'apiKey': 'AIzaSyA0rvMrNVWVhm8HNd56eY64OXhVEVIxqlQ',\n  'clientId': '169025190639-ktoqejmqod0hcfh8pbt7hknbg8apfps9.apps.googleusercontent.com',\n  'scope': 'https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/script.external_request',\n  'discoveryDocs': ['https://script.googleapis.com/$discovery/rest?version=v1']\n};\nexport const getRequest = data => ({\n  'root': 'https://script.googleapis.com',\n  'path': 'v1/scripts/M1qUJ-bECOgm4Y9z9evwE5gNpR_a-QLCI:run',\n  'method': 'POST',\n  'body': data\n});","import GAPI from 'easy-gapi';\nimport { data, getRequest } from './keys';\n\nclass API extends GAPI {\n\n  constructor (onStatusUpdate) {\n    super(data, onStatusUpdate);\n  }\n\n  fetch (url) {\n    let data = {\n      'function': 'fetch',\n      'parameters': [ url ],\n      'devMode': true\n    };\n    return super.execute(getRequest(data));\n  }\n\n}\n\nexport default API;","export default class ParameterData {\n\n  name = 'Parameter';\n  pattern = '';\n  item = '';\n  flags = {\n    i: true,\n    g: false,\n    m: false,\n  };\n\n  constructor ({ name = 'Parameter', pattern = '', item = '', flags = { i: true, g: false, m: false, } }) {\n    this.name = name;\n    this.pattern = pattern;\n    this.item = item;\n    this.flags = flags;\n  }\n\n  flagsToString () {\n    let result = '';\n    for (let key of Object.keys(this.flags)) {\n      if (this.flags[key])\n        result += key;\n    }\n    return result;\n  }\n\n}","class Expression {\n\n  name;\n  expression;\n  item;\n\n  constructor (parameter) {\n    this.name = parameter.name;\n    this.item = parameter.item;\n    this.expression = new RegExp(parameter.pattern, parameter.flagsToString());\n  }\n\n  apply (text) {\n    let result = '';\n    text.replace(this.expression, match => {\n      result += match.replace(this.expression, this.item);\n    });\n    return result;\n  }\n\n}\n\nexport default class Grabber {\n\n  static grab (parameters, buildString) {\n    let expressions = parameters.map(parameter => new Expression(parameter));\n    return text => {\n      let values = expressions.reduce((values, exp) => {\n        values[exp.name] = exp.apply(text);\n        return values;\n      }, {});\n      return buildString.replace(/%(.+?)%/g, (match, name) => values[name]);\n    };\n  }\n\n}","import React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Textarea from './textarea';\nimport Parameter from './parameter';\n\nimport API from '../assets/api';\nimport ParameterData from '../assets/parameterData';\nimport Grabber from '../assets/grabber';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    \n  },\n  grow: {\n    flexGrow: 1,\n  },\n  wrapper: {\n    width: '90%',\n    margin: '0 auto',\n  },\n  container: {\n    padding: 20\n  },\n  button: {\n    marginRight: 20,\n  },\n  icon: {\n    fontSize: 26,\n    margin: 5\n  },\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  flags: {\n    marginLeft: 30,\n    minWidth: 180\n  }\n};\n\nclass App extends Component {\n\n  state = {\n    links: 'https://reactjs.org\\nhttps://learn.javascript.ru',\n    parameters: [\n      new ParameterData({\n        name: 'Title',\n        pattern: '<title.*?>(.+)<\\\\/title>',\n        item: '$1',\n      }),\n      new ParameterData({\n        name: 'Links',\n        pattern: '<a.+?href=\"(http.+?)\".*?>([^<>]+?)<\\\\/a>',\n        item: '<li>$2: <a href=\"$1\">$1</a></li>',\n        flags: { i: true, g: true, m: false }\n      })\n    ],\n    itemsContainer: '<b>%Title%</b><br><ul>%Links%</ul>',\n    result: [],\n    user: null,\n  };\n\n  api = null;\n\n  constructor (props) {\n    super(props);\n    this.api = new API(status => this.setState({ user: status ? this.api.user : null }));\n  }\n\n  authHandler = () => {\n    this.api.authorize();\n  }\n\n  changeHandler = name => event => {\n    this.setState({ [name]: event.target.value });\n  }\n\n  runHandler = () => {\n    const { parameters, itemsContainer, links } = this.state;\n    let grab = Grabber.grab(parameters, itemsContainer);\n    Promise.all(links.split('\\n').map(link => this.api.fetch(link)))\n      .then(result => result.map(text => grab(text)))\n      .then(result => this.setState({ result }));\n  }\n\n  parameterChangeHandler = id => name => event => {\n    let value = event.target.value;\n    this.setState(({ parameters }) => {\n      parameters[id][name] = value;\n      return { parameters };\n    });\n  }\n  \n  parameterCheckHandler = id => key => (event, value) => {\n    this.setState(({ parameters }) => {\n      parameters[id].flags[key] = value;\n      return { parameters };\n    });\n  }\n\n  parameterDeleteHandler = (id) => () => {\n    this.setState(({ parameters }) => {\n      parameters.splice(id, 1);\n      return { parameters };\n    });\n  }\n\n  parameterAddHandler = () => {\n    this.setState(({ parameters }) => {\n      parameters.push(new ParameterData({}));\n      return { parameters };\n    });\n  }\n\n  render() {\n\n    const { classes } = this.props;\n    const { links, parameters, itemsContainer, user, result } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              Data grabber\n            </Typography>\n            <Button className={classes.button} color=\"inherit\" onClick={this.authHandler} >\n              { user ? user.w3.ig : 'Login' }\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Grid container>\n          <Grid item xs={12} lg={6}>\n            <div className={classes.wrapper}>\n              <div className={classes.container}>\n                <Textarea\n                  label=\"Links\"\n                  value={links}\n                  onChange={this.changeHandler('links')}\n                />\n              </div>\n              {parameters.map((parameter, index) => (\n                <Parameter\n                  key={index}\n                  className={classes.container}\n                  value={parameter}\n                  onChange={this.parameterChangeHandler(index)}\n                  onCheck={this.parameterCheckHandler(index)}\n                  onRemove={this.parameterDeleteHandler(index)}\n                />\n              ))}\n              <div className={classes.container}>\n                <Button variant=\"outlined\" color=\"primary\" className={classes.button} onClick={this.runHandler} disabled={!user}>\n                  Run\n                </Button>\n                <Button variant=\"outlined\" className={classes.button} onClick={this.parameterAddHandler} disabled={!user}>\n                  Add\n                </Button>\n              </div>\n              <div className={classes.container}>\n                <Textarea\n                  label=\"Items container\"\n                  value={itemsContainer}\n                  onChange={this.changeHandler('itemsContainer')}\n                />\n              </div>\n            </div>\n          </Grid>\n          {result.length > 0 &&\n            <Grid item xs={12} lg={6}>\n              <div className={classes.wrapper}>\n                {result.map((element, index) =>\n                  <div key={index} className={classes.container} dangerouslySetInnerHTML={{__html: element}}></div>\n                )}\n              </div>\n            </Grid>\n          }\n        </Grid>\n      </div>\n    );\n  }\n\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}