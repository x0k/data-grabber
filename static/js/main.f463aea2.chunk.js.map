{"version":3,"sources":["assets/gapi.js","assets/grabber.js","components/app.js","serviceWorker.js","index.js"],"names":["gapi","API","data","_this","this","Object","classCallCheck","onLoad","isAuthorized","onStatusUpdate","scriptId","_satusUpdate","status","setAuth","googleAuth","auth2","getAuthInstance","isSignedIn","listen","get","load","client","init","then","window","addEventListener","signOut","signIn","url","function","parameters","devMode","request","root","path","concat","method","body","Promise","resolve","reject","execute","response","error","JSON","stringify","details","errorMessage","result","currentUser","apiKey","clientId","scope","discoveryDocs","Expression","parameter","name","expression","RegExp","pattern","flagsToString","text","match","Builder","buildString","string","regexp","exec","push","values","slice","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","replace","err","return","Grabber","expressions","map","builder","reduce","exp","apply","build","Parameter","flags","i","g","m","_arr","keys","_i","length","key","App","props","possibleConstructorReturn","getPrototypeOf","call","state","links","resultString","user","_userUpdate","setState","api","authHandler","authorize","runHandler","grab","all","split","link","fetch","join","changeHandler","event","defineProperty","target","parameterChangeHandler","id","parameterFlagHandler","flag","parameterDeleteHandler","splice","addParameterHandler","_this2","classes","_this$state","react_default","a","createElement","className","AppBar_default","position","appBar","Toolbar_default","Typography_default","variant","color","grow","Button_default","button","onClick","w3","ig","container","Grid_default","spacing","grid","item","xs","TextField_default","fullWidth","label","onChange","multiline","rows","index","Paper_default","paper","elevation","variableBar","IconButton_default","Delete_default","icon","FormGroup_default","row","style","marginLeft","minWidth","FormControlLabel_default","control","Checkbox_default","checked","Component","withStyles","theme","flexGrow","padding","margin","fontSize","display","alignItems","Boolean","location","hostname","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f463aea2.chunk.js","sourcesContent":["const data = {\n  apiKey: 'AIzaSyA0rvMrNVWVhm8HNd56eY64OXhVEVIxqlQ',\n  clientId: '169025190639-ktoqejmqod0hcfh8pbt7hknbg8apfps9.apps.googleusercontent.com',\n  scope: 'https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/script.external_request',\n  discoveryDocs: ['https://script.googleapis.com/$discovery/rest?version=v1']\n};\n\nclass API {\n\n  gapi;\n  googleAuth;\n  onLoad = null;\n  isAuthorized = false;\n  onStatusUpdate = null;\n  scriptId = 'M1qUJ-bECOgm4Y9z9evwE5gNpR_a-QLCI';\n\n  _satusUpdate = status => {\n    this.isAuthorized = status;\n    if (this.onStatusUpdate)\n      this.onStatusUpdate(status);\n  }\n\n  constructor (data) {\n    let setAuth = () => {\n      this.googleAuth = this.gapi.auth2.getAuthInstance();\n      this.googleAuth.isSignedIn.listen(this._satusUpdate);\n      return this.googleAuth.isSignedIn.get();\n    };\n    let load = () => {\n      this.gapi.client\n        .init(data)\n        .then(setAuth)\n        .then(status => {\n          if (this.onLoad)\n            this.onLoad(status);\n        });\n    };\n    let init = () => {\n      this.gapi = window.gapi;\n      this.gapi.load('client:auth2', load);\n    };\n    if (window.gapi) {\n      init();\n    } else {\n      window.addEventListener('gapiLoaded', init);\n    }\n  }\n\n  authorize () {\n    if (this.isAuthorized) {\n      return this.googleAuth.signOut();\n    } else {\n      return this.googleAuth.signIn();\n    }\n  }\n\n  fetch (url) {\n    let data = {\n      'function': 'fetch',\n      'parameters': [ url ],\n      'devMode': true\n    };\n    let request = this.gapi.client.request({\n      'root': 'https://script.googleapis.com',\n      'path': `v1/scripts/${this.scriptId}:run`,\n      'method': 'POST',\n      'body': data\n    });\n    return new Promise((resolve, reject) => {\n      request.execute(response => {\n        if (response.error && response.error.status) {\n          reject('Error calling API: ' + JSON.stringify(response, null, 2));\n        } else if (response.error) {\n          let error = response.error.details[0];\n          reject('Script error! Message: ' + error.errorMessage);\n        } else {\n          resolve(response.response.result);\n        }\n      });\n    });\n  }\n\n  get user () {\n    return this.googleAuth.currentUser.get();\n  }\n\n}\n\nexport default new API(data);","class Expression {\n\n  name;\n  expression;\n\n  constructor (parameter) {\n    this.name = parameter.name;\n    this.expression = new RegExp(parameter.pattern, parameter.flagsToString());\n  }\n\n  apply (text) {\n    let matches = text.match(this.expression);\n    return matches[1];\n  }\n\n}\n\nclass Builder {\n\n  string;\n  parameters = [];\n\n  constructor (buildString) {\n    this.string = buildString;\n    let regexp = /%(.+?)%/g;\n    let result;\n    while (result = regexp.exec(buildString)) {\n      let name = result[1];\n      this.parameters.push({ name, regexp: new RegExp(`%${name}%`, 'g') });\n    }\n  }\n\n  build (values) {\n    let result = this.string.slice();\n    for (let parameter of this.parameters) {\n      result = result.replace(parameter.regexp, values[parameter.name]);\n    }\n    return result;\n  }\n\n}\n\nexport default class Grabber {\n\n  static grab (parameters, buildString) {\n    let expressions = parameters.map(parameter => new Expression(parameter));\n    let builder = new Builder(buildString);\n    return text => {\n      let values = expressions.reduce((values, exp) => {\n        values[exp.name] = exp.apply(text);\n        return values;\n      }, {});\n      return builder.build(values);\n    };\n  }\n\n}","import React, { Component } from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport api from '../assets/gapi';\nimport Grabber from '../assets/grabber';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    \n  },\n  grow: {\n    flexGrow: 1,\n  },\n  container: {\n    padding: 20\n  },\n  button: {\n    margin: 0,\n  },\n  icon: {\n    fontSize: 26,\n    margin: 5\n  },\n  variableBar: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  paper: {\n    padding: 20\n  }\n});\n\nclass Parameter {\n\n  name = 'Parameter';\n  pattern = '';\n  flags = {\n    i: true,\n    g: false,\n    m: false,\n  };\n\n  constructor (name, pattern) {\n    this.name = name;\n    this.pattern = pattern;\n  }\n\n  flagsToString () {\n    let result = '';\n    for (let key of Object.keys(this.flags)) {\n      if (this.flags[key])\n        result += key;\n    }\n    return result;\n  }\n\n}\n\nclass App extends Component {\n\n  state = {\n    links: 'https://reactjs.org',\n    parameters: [\n      new Parameter('Title', '<title.*>(.+)<\\\\/title>')\n    ],\n    resultString: 'Title: %Title%',\n    result: '',\n    user: null,\n  };\n\n  _userUpdate = status => {\n    this.setState({\n      user: status ? api.user : null\n    });\n  }\n\n  constructor (props) {\n    super(props);\n    api.onLoad = api.onStatusUpdate = this._userUpdate;\n  }\n\n  authHandler = () => {\n    api.authorize();\n  }\n\n  runHandler = () => {\n    let grab = Grabber.grab(this.state.parameters, this.state.resultString);\n    Promise.all(this.state.links.split('\\n').map(link => api.fetch(link)))\n      .then(result => result.map(text => grab(text)).join('\\n'))\n      .then(result => this.setState({ result }));\n  }\n\n  changeHandler = name => event => {\n    this.setState({ [name]: event.target.value });\n  }\n\n  parameterChangeHandler = (id, name) => (event, value) => {\n    this.setState((state, props) => {\n      state.parameters[id][name] = value;\n      return state;\n    });\n  }\n\n  parameterFlagHandler = (id, flag) => (event, value) => {\n    this.setState((state, props) => {\n      state.parameters[id].flags[flag] = value;\n      return state;\n    });\n  }\n\n  parameterDeleteHandler = (id) => () => {\n    this.setState((state, props) => {\n      state.parameters.splice(id, 1);\n      return state;\n    });\n  }\n\n  addParameterHandler = () => {\n    this.setState((state, props) => {\n      state.parameters.push(new Parameter('Parameter', ''));\n      return state;\n    });\n  }\n\n  render() {\n\n    const { classes } = this.props,\n      { links, parameters, resultString, user, result } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              Data grabber\n            </Typography>\n            <Button className={classes.button} color=\"inherit\" onClick={this.authHandler} >\n              { user ? user.w3.ig : 'Login' }\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.container}>\n          <Grid container spacing={24} className={classes.grid}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                label=\"Result string\"\n                value={resultString}\n                onChange={this.changeHandler('resultString')}\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <TextField\n                label=\"Links\"\n                fullWidth\n                multiline\n                rows={28}\n                variant=\"outlined\"\n                value={links}\n                onChange={this.changeHandler('links')}\n              />\n            </Grid>\n            <Grid item xs={8}>\n              {parameters.map((parameter, index) => (\n                <Paper className={classes.paper} elevation={1}>\n                  <Grid container spacing={24}>\n                    <Grid item xs={12}>\n                      <div className={classes.variableBar}>\n                        <TextField\n                          fullWidth\n                          label=\"Name\"\n                          variant=\"outlined\"\n                          value={parameter.name}\n                          onChange={this.parameterChangeHandler(index, 'name')}\n                        />\n                        <IconButton className={classes.button} onClick={this.parameterDeleteHandler(index)}>\n                          <DeleteIcon className={classes.icon}/>\n                        </IconButton>\n                      </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <div className={classes.variableBar}>\n                        <TextField\n                          fullWidth\n                          label=\"Pattern\"\n                          variant=\"outlined\"\n                          value={parameter.pattern}\n                          onChange={this.parameterChangeHandler(index, 'pattern')}\n                        />\n                        <FormGroup row style={{ marginLeft: 30, minWidth: 180 }}>\n                          {Object.keys(parameter.flags).map(key => (\n                            <FormControlLabel control={\n                              <Checkbox value={key} checked={parameter.flags[key]} onChange={this.parameterFlagHandler(index, key)} />\n                            } label={key} />\n                          ))}\n                        </FormGroup>\n                      </div>\n                    </Grid>\n                  </Grid>\n                </Paper>\n              ))}\n            </Grid>\n            <Grid item xs={4}>\n              <Button color=\"primary\" className={classes.button} onClick={this.runHandler} >\n                Run\n              </Button>\n            </Grid>\n            <Grid item xs={8}>\n              <Button className={classes.button} onClick={this.addParameterHandler} >\n                Add\n              </Button>\n            </Grid>\n            { result.length > 0 &&\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Result\"\n                  fullWidth\n                  multiline\n                  rows={result.split('\\n').length}\n                  variant=\"outlined\"\n                  value={result}\n                />\n              </Grid>\n            }\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}