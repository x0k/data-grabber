{"version":3,"sources":["assets/gapi.js","assets/grabber.js","components/app.js","serviceWorker.js","index.js"],"names":["API","data","_this","this","Object","classCallCheck","defineProperty","_gapi","writable","value","_googleAuth","_isAuthorized","_onStatusUpdate","_satusUpdate","status","classPrivateFieldLooseBase","setAuth","auth2","getAuthInstance","isSignedIn","listen","get","load","client","init","then","window","gapi","addEventListener","signOut","signIn","url","function","parameters","devMode","request","root","path","method","body","Promise","resolve","reject","execute","response","error","JSON","stringify","details","errorMessage","result","val","currentUser","apiKey","clientId","scope","discoveryDocs","Expression","parameter","name","expression","RegExp","pattern","flagsToString","text","match","Builder","buildString","string","regexp","exec","push","concat","values","slice","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","replace","err","return","Grabber","expressions","map","builder","reduce","exp","apply","build","Parameter","flags","i","g","m","_arr","keys","_i","length","key","App","props","possibleConstructorReturn","getPrototypeOf","call","state","links","resultString","user","_userUpdate","setState","api","authHandler","authorize","runHandler","grab","all","split","link","fetch","join","changeHandler","event","target","parameterChangeHandler","id","parameterFlagHandler","flag","parameterDeleteHandler","splice","addParameterHandler","onStatusUpdate","_this2","classes","_this$state","react_default","a","createElement","className","AppBar_default","position","appBar","Toolbar_default","Typography_default","variant","color","grow","Button_default","button","onClick","w3","ig","Grid_default","container","grid","item","xs","TextField_default","fullWidth","label","onChange","disabled","index","spacing","variableBar","IconButton_default","Delete_default","icon","FormGroup_default","row","style","marginLeft","minWidth","FormControlLabel_default","control","Checkbox_default","checked","multiline","rows","Component","withStyles","theme","flexGrow","padding","marginRight","fontSize","margin","display","alignItems","Boolean","location","hostname","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b21696b.chunk.js","sourcesContent":["const data = {\n  apiKey: 'AIzaSyA0rvMrNVWVhm8HNd56eY64OXhVEVIxqlQ',\n  clientId: '169025190639-ktoqejmqod0hcfh8pbt7hknbg8apfps9.apps.googleusercontent.com',\n  scope: 'https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/script.external_request',\n  discoveryDocs: ['https://script.googleapis.com/$discovery/rest?version=v1']\n};\n\nclass API {\n\n  #gapi;\n  #googleAuth;\n  #isAuthorized = false;\n  #onStatusUpdate = null;\n\n  #satusUpdate = status => {\n    this.#isAuthorized = status;\n    if (this.#onStatusUpdate)\n      this.#onStatusUpdate(status);\n  }\n\n  constructor (data) {\n    let setAuth = () => {\n      this.#googleAuth = this.#gapi.auth2.getAuthInstance();\n      this.#googleAuth.isSignedIn.listen(this.#satusUpdate);\n      this.#satusUpdate(this.#googleAuth.isSignedIn.get());\n    };\n    let load = () => {\n      this.#gapi.client\n        .init(data)\n        .then(setAuth);\n    };\n    let init = () => {\n      this.#gapi = window.gapi;\n      this.#gapi.load('client:auth2', load);\n    };\n    if (window.gapi) {\n      init();\n    } else {\n      window.addEventListener('gapiLoaded', init);\n    }\n  }\n\n  authorize () {\n    if (this.#isAuthorized) {\n      return this.#googleAuth.signOut();\n    }\n    return this.#googleAuth.signIn();\n  }\n\n  fetch (url) {\n    let data = {\n      'function': 'fetch',\n      'parameters': [ url ],\n      'devMode': true\n    };\n    let request = this.#gapi.client.request({\n      'root': 'https://script.googleapis.com',\n      'path': 'v1/scripts/M1qUJ-bECOgm4Y9z9evwE5gNpR_a-QLCI:run',\n      'method': 'POST',\n      'body': data\n    });\n    return new Promise((resolve, reject) => {\n      request.execute(response => {\n        if (response.error && response.error.status) {\n          reject('Error calling API: ' + JSON.stringify(response, null, 2));\n        } else if (response.error) {\n          let error = response.error.details[0];\n          reject('Script error! Message: ' + error.errorMessage);\n        } else {\n          resolve(response.response.result);\n        }\n      });\n    });\n  }\n\n  set onStatusUpdate (val) {\n    this.#onStatusUpdate = val;\n  }\n\n  get user () {\n    return this.#googleAuth.currentUser.get();\n  }\n\n}\n\nexport default new API(data);","class Expression {\n\n  name;\n  expression;\n\n  constructor (parameter) {\n    this.name = parameter.name;\n    this.expression = new RegExp(parameter.pattern, parameter.flagsToString());\n  }\n\n  apply (text) {\n    let matches = text.match(this.expression);\n    return matches[1];\n  }\n\n}\n\nclass Builder {\n\n  string;\n  parameters = [];\n\n  constructor (buildString) {\n    this.string = buildString;\n    let regexp = /%(.+?)%/g;\n    let result;\n    while (result = regexp.exec(buildString)) {\n      let name = result[1];\n      this.parameters.push({ name, regexp: new RegExp(`%${name}%`, 'g') });\n    }\n  }\n\n  build (values) {\n    let result = this.string.slice();\n    for (let parameter of this.parameters) {\n      result = result.replace(parameter.regexp, values[parameter.name]);\n    }\n    return result;\n  }\n\n}\n\nexport default class Grabber {\n\n  static grab (parameters, buildString) {\n    let expressions = parameters.map(parameter => new Expression(parameter));\n    let builder = new Builder(buildString);\n    return text => {\n      let values = expressions.reduce((values, exp) => {\n        values[exp.name] = exp.apply(text);\n        return values;\n      }, {});\n      return builder.build(values);\n    };\n  }\n\n}","import React, { Component } from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport api from '../assets/gapi';\nimport Grabber from '../assets/grabber';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    \n  },\n  grow: {\n    flexGrow: 1,\n  },\n  container: {\n    padding: 20\n  },\n  button: {\n    marginRight: 20,\n  },\n  icon: {\n    fontSize: 26,\n    margin: 5\n  },\n  variableBar: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  grid: {\n    \n  }\n});\n\nclass Parameter {\n\n  name = 'Parameter';\n  pattern = '';\n  flags = {\n    i: true,\n    g: false,\n    m: false,\n  };\n\n  constructor (name, pattern) {\n    this.name = name;\n    this.pattern = pattern;\n  }\n\n  flagsToString () {\n    let result = '';\n    for (let key of Object.keys(this.flags)) {\n      if (this.flags[key])\n        result += key;\n    }\n    return result;\n  }\n\n}\n\nclass App extends Component {\n\n  state = {\n    links: 'https://reactjs.org',\n    parameters: [\n      new Parameter('Title', '<title.*>(.+)<\\\\/title>')\n    ],\n    resultString: 'Title: %Title%',\n    result: '',\n    user: null,\n  };\n\n  _userUpdate = status => {\n    this.setState({\n      user: status ? api.user : null\n    });\n  }\n\n  constructor (props) {\n    super(props);\n    api.onStatusUpdate = this._userUpdate;\n  }\n\n  authHandler = () => {\n    api.authorize();\n  }\n\n  runHandler = () => {\n    let grab = Grabber.grab(this.state.parameters, this.state.resultString);\n    Promise.all(this.state.links.split('\\n').map(link => api.fetch(link)))\n      .then(result => result.map(text => grab(text)).join('\\n'))\n      .then(result => this.setState({ result }));\n  }\n\n  changeHandler = name => event => {\n    this.setState({ [name]: event.target.value });\n  }\n\n  parameterChangeHandler = (id, name) => (event, value) => {\n    this.setState((state, props) => {\n      state.parameters[id][name] = value;\n      return state;\n    });\n  }\n\n  parameterFlagHandler = (id, flag) => (event, value) => {\n    this.setState((state, props) => {\n      state.parameters[id].flags[flag] = value;\n      return state;\n    });\n  }\n\n  parameterDeleteHandler = (id) => () => {\n    this.setState((state, props) => {\n      state.parameters.splice(id, 1);\n      return state;\n    });\n  }\n\n  addParameterHandler = () => {\n    this.setState((state, props) => {\n      state.parameters.push(new Parameter('Parameter', ''));\n      return state;\n    });\n  }\n\n  render() {\n\n    const { classes } = this.props,\n      { links, parameters, resultString, user, result } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              Data grabber\n            </Typography>\n            <Button className={classes.button} color=\"inherit\" onClick={this.authHandler} >\n              { user ? user.w3.ig : 'Login' }\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Grid container className={classes.grid}>\n          <Grid item xs={8}>\n            <div className={classes.container}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                label=\"Result string\"\n                value={resultString}\n                onChange={this.changeHandler('resultString')}\n              />\n            </div>\n            <div className={classes.container}>\n              <Button variant=\"outlined\" color=\"primary\" className={classes.button} onClick={this.runHandler} disabled={!user}>\n                Run\n              </Button>\n              <Button variant=\"outlined\" className={classes.button} onClick={this.addParameterHandler} disabled={!user}>\n                Add\n              </Button>\n            </div>\n            {parameters.map((parameter, index) => (\n              <div className={classes.container}>\n                <Grid container spacing={24}>\n                  <Grid item xs={12}>\n                    <div className={classes.variableBar}>\n                      <TextField\n                        fullWidth\n                        label=\"Name\"\n                        variant=\"outlined\"\n                        value={parameter.name}\n                        onChange={this.parameterChangeHandler(index, 'name')}\n                      />\n                      <IconButton className={classes.button} onClick={this.parameterDeleteHandler(index)}>\n                        <DeleteIcon className={classes.icon}/>\n                      </IconButton>\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.variableBar}>\n                      <TextField\n                        fullWidth\n                        variant=\"outlined\"\n                        label=\"Pattern\"\n                        value={parameter.pattern}\n                        onChange={this.parameterChangeHandler(index, 'pattern')}\n                      />\n                      <FormGroup row style={{ marginLeft: 30, minWidth: 180 }}>\n                        {Object.keys(parameter.flags).map(key => (\n                          <FormControlLabel control={\n                            <Checkbox value={key} checked={parameter.flags[key]} onChange={this.parameterFlagHandler(index, key)} />\n                          } label={key} />\n                        ))}\n                      </FormGroup>\n                    </div>\n                  </Grid>\n                </Grid>\n              </div>\n            ))}\n          </Grid>\n          <Grid item xs={4}>\n            <div className={classes.container}>\n              <TextField\n                label=\"Links\"\n                fullWidth\n                multiline\n                variant=\"outlined\"\n                value={links}\n                onChange={this.changeHandler('links')}\n              />\n            </div>\n          </Grid>\n          { result.length > 0 &&\n            <Grid item xs={12}>\n              <div className={classes.container}>\n                <TextField\n                  label=\"Result\"\n                  fullWidth\n                  multiline\n                  rows={result.split('\\n').length}\n                  variant=\"outlined\"\n                  value={result}\n                />\n              </div>\n            </Grid>\n          }\n        </Grid>\n      </div>\n    );\n  }\n\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}