{"version":3,"sources":["components/textarea.js","components/parameter.js","assets/gapi.js","assets/grabber.js","components/app.js","serviceWorker.js","index.js"],"names":["components_textarea","_ref","label","value","onChange","react_default","a","createElement","TextField_default","fullWidth","multiline","variant","Parameter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeHandler","name","event","setState","defineProperty","checkHandler","key","state","flags","_this2","_this$props","className","classes","onRemove","_this$state","pattern","item","row","FormGroup_default","keys","map","FormControlLabel_default","control","Checkbox_default","checked","Button_default","color","onClick","Component","withStyles","display","alignItems","marginTop","marginBottom","marginLeft","minWidth","API","data","_gapi","writable","_googleAuth","_isAuthorized","_onStatusUpdate","_satusUpdate","status","classPrivateFieldLooseBase","setAuth","auth2","getAuthInstance","isSignedIn","listen","get","load","client","init","then","window","gapi","addEventListener","signOut","signIn","url","function","parameters","devMode","request","root","path","method","body","Promise","resolve","reject","execute","response","error","JSON","stringify","details","errorMessage","result","val","currentUser","apiKey","clientId","scope","discoveryDocs","Expression","parameter","expression","RegExp","flagsToString","text","replace","match","Grabber","buildString","expressions","values","reduce","exp","apply","ParameterData","arguments","length","undefined","i","g","m","_arr","_i","App","links","itemsContainer","user","_userUpdate","api","authHandler","authorize","runHandler","grab","all","split","link","fetch","target","deleteHandler","id","splice","addHandler","push","onStatusUpdate","_this$state2","AppBar_default","position","appBar","Toolbar_default","Typography_default","grow","button","w3","ig","container","index","components_parameter","disabled","element","dangerouslySetInnerHTML","__html","theme","flexGrow","padding","marginRight","icon","fontSize","margin","grid","Boolean","location","hostname","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24d74ea9.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function ({ label, value, onChange }) {\n  return (\n    <TextField\n      label={label}\n      fullWidth\n      multiline\n      variant=\"outlined\"\n      value={value}\n      onChange={onChange}\n    />\n  );\n}","import React, { Component } from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  flags: {\n    marginLeft: 30,\n    minWidth: 180\n  }\n};\n\nclass Parameter extends Component {\n\n  constructor (props) {\n    super(props);\n    this.state = props.value;\n  }\n\n  changeHandler = name => (event, value) => this.setState({ [name]: value });\n\n  checkHandler = key => (event, value) => {\n    this.setState(state => {\n      state.flags[key] = value;\n      return state;\n    });\n  }\n\n  render () {\n    const { className, classes, onRemove } = this.props;\n    const { name, flags, pattern, item } = this.state;\n\n    return (\n      <div className={className}>\n        <div className={classes.row}>\n          <TextField\n            fullWidth\n            label=\"Name\"\n            variant=\"outlined\"\n            value={name}\n            onChange={this.changeHandler('name')}\n          />\n          <FormGroup row className={classes.flags}>\n            {Object.keys(flags).map(key => (\n              <FormControlLabel control={\n                <Checkbox\n                  value={key}\n                  checked={flags[key]}\n                  onChange={this.checkHandler(key)} />\n              } label={key} />\n            ))}\n          </FormGroup>\n          <Button variant=\"outlined\" color=\"secondary\" onClick={onRemove}>\n            Remove\n          </Button>\n        </div>\n        <div className={classes.row}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            label=\"Pattern\"\n            value={pattern}\n            onChange={this.changeHandler('pattern')}\n          />\n        </div>\n        <div className={classes.row}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            label=\"Item\"\n            value={item}\n            onChange={this.changeHandler('item')}\n          />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default withStyles(styles)(Parameter);","const data = {\n  apiKey: 'AIzaSyA0rvMrNVWVhm8HNd56eY64OXhVEVIxqlQ',\n  clientId: '169025190639-ktoqejmqod0hcfh8pbt7hknbg8apfps9.apps.googleusercontent.com',\n  scope: 'https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/script.external_request',\n  discoveryDocs: ['https://script.googleapis.com/$discovery/rest?version=v1']\n};\n\nclass API {\n\n  #gapi;\n  #googleAuth;\n  #isAuthorized = false;\n  #onStatusUpdate = null;\n\n  #satusUpdate = status => {\n    this.#isAuthorized = status;\n    if (this.#onStatusUpdate)\n      this.#onStatusUpdate(status);\n  }\n\n  constructor (data) {\n    let setAuth = () => {\n      this.#googleAuth = this.#gapi.auth2.getAuthInstance();\n      this.#googleAuth.isSignedIn.listen(this.#satusUpdate);\n      this.#satusUpdate(this.#googleAuth.isSignedIn.get());\n    };\n    let load = () => {\n      this.#gapi.client\n        .init(data)\n        .then(setAuth);\n    };\n    let init = () => {\n      this.#gapi = window.gapi;\n      this.#gapi.load('client:auth2', load);\n    };\n    if (window.gapi) {\n      init();\n    } else {\n      window.addEventListener('gapiLoaded', init);\n    }\n  }\n\n  authorize () {\n    if (this.#isAuthorized) {\n      return this.#googleAuth.signOut();\n    }\n    return this.#googleAuth.signIn();\n  }\n\n  fetch (url) {\n    let data = {\n      'function': 'fetch',\n      'parameters': [ url ],\n      'devMode': true\n    };\n    let request = this.#gapi.client.request({\n      'root': 'https://script.googleapis.com',\n      'path': 'v1/scripts/M1qUJ-bECOgm4Y9z9evwE5gNpR_a-QLCI:run',\n      'method': 'POST',\n      'body': data\n    });\n    return new Promise((resolve, reject) => {\n      request.execute(response => {\n        if (response.error && response.error.status) {\n          reject('Error calling API: ' + JSON.stringify(response, null, 2));\n        } else if (response.error) {\n          let error = response.error.details[0];\n          reject('Script error! Message: ' + error.errorMessage);\n        } else {\n          resolve(response.response.result);\n        }\n      });\n    });\n  }\n\n  set onStatusUpdate (val) {\n    this.#onStatusUpdate = val;\n  }\n\n  get user () {\n    return this.#googleAuth.currentUser.get();\n  }\n\n}\n\nexport default new API(data);","class Expression {\n\n  name;\n  expression;\n  item;\n\n  constructor (parameter) {\n    this.name = parameter.name;\n    this.item = parameter.item;\n    this.expression = new RegExp(parameter.pattern, parameter.flagsToString());\n  }\n\n  apply (text) {\n    let result = '';\n    text.replace(this.expression, match => {\n      result += match.replace(this.expression, this.item);\n    });\n    return result;\n  }\n\n}\n\nexport default class Grabber {\n\n  static grab (parameters, buildString) {\n    let expressions = parameters.map(parameter => new Expression(parameter));\n    return text => {\n      let values = expressions.reduce((values, exp) => {\n        values[exp.name] = exp.apply(text);\n        return values;\n      }, {});\n      return buildString.replace(/%(.+?)%/g, (match, name) => values[name]);\n    };\n  }\n\n}","import React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Textarea from './textarea';\nimport Parameter from './parameter';\n\nimport api from '../assets/gapi';\nimport Grabber from '../assets/grabber';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    \n  },\n  grow: {\n    flexGrow: 1,\n  },\n  container: {\n    padding: 20\n  },\n  button: {\n    marginRight: 20,\n  },\n  icon: {\n    fontSize: 26,\n    margin: 5\n  },\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  grid: {\n    \n  }\n});\n\nclass ParameterData {\n\n  name = 'Parameter';\n  pattern = '';\n  item = '';\n  flags = {\n    i: true,\n    g: false,\n    m: false,\n  };\n\n  constructor (name, pattern, item, flags = { i: true, g: false, m: false, }) {\n    this.name = name;\n    this.pattern = pattern;\n    this.item = item;\n    this.flags = flags;\n  }\n\n  flagsToString () {\n    let result = '';\n    for (let key of Object.keys(this.flags)) {\n      if (this.flags[key])\n        result += key;\n    }\n    return result;\n  }\n\n}\n\nclass App extends Component {\n\n  state = {\n    links: 'https://reactjs.org',\n    parameters: [\n      new ParameterData('Title', '<title.*?>(.+)<\\\\/title>', '$1'),\n      new ParameterData('Links', '<a.+?href=\"(.+?)\".*?>([^<>]+?)<\\\\/a>', '<li>$2: $1</li>', { i: true, g: true, m: false })\n    ],\n    itemsContainer: '<b>%Title%</b><br><ul>%Links%</ul>',\n    result: [],\n    user: null,\n  };\n\n  _userUpdate = status => {\n    this.setState({\n      user: status ? api.user : null\n    });\n  }\n\n  constructor (props) {\n    super(props);\n    api.onStatusUpdate = this._userUpdate;\n  }\n\n  authHandler = () => {\n    api.authorize();\n  }\n\n  runHandler = () => {\n    const { parameters, itemsContainer, links } = this.state;\n    let grab = Grabber.grab(parameters, itemsContainer);\n    Promise.all(links.split('\\n').map(link => api.fetch(link)))\n      .then(result => result.map(text => grab(text)))\n      .then(result => this.setState({ result }));\n  }\n\n  changeHandler = name => event => {\n    this.setState({ [name]: event.target.value });\n  }\n\n  deleteHandler = (id) => () => {\n    this.setState((state, props) => {\n      state.parameters.splice(id, 1);\n      return state;\n    });\n  }\n\n  addHandler = () => {\n    this.setState((state, props) => {\n      state.parameters.push(new Parameter('Parameter', ''));\n      return state;\n    });\n  }\n\n  render() {\n\n    const { classes } = this.props,\n      { links, parameters, itemsContainer, user, result } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              Data grabber\n            </Typography>\n            <Button className={classes.button} color=\"inherit\" onClick={this.authHandler} >\n              { user ? user.w3.ig : 'Login' }\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.container}>\n          <Textarea\n            label=\"Links\"\n            value={links}\n            onChange={this.changeHandler('links')}\n          />\n        </div>\n        {parameters.map((parameter, index) => (\n          <Parameter\n            value={parameter}\n            className={classes.container}\n            onRemove={this.deleteHandler(index)}\n          />\n        ))}\n        <div className={classes.container}>\n          <Button variant=\"outlined\" color=\"primary\" className={classes.button} onClick={this.runHandler} disabled={!user}>\n            Run\n          </Button>\n          <Button variant=\"outlined\" className={classes.button} onClick={this.addHandler} disabled={!user}>\n            Add\n          </Button>\n        </div>\n        <div className={classes.container}>\n          <Textarea\n            label=\"Items container\"\n            value={itemsContainer}\n            onChange={this.changeHandler('itemsContainer')}\n          />\n        </div>\n        {result.length > 0 &&\n          result.map(element =>\n            <div className={classes.container} dangerouslySetInnerHTML={{__html: element}}></div>\n          )\n        }\n      </div>\n    );\n  }\n\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}